services:
  postgres:
    image: postgres:latest
    container_name: postgres-desafio
    environment:
      POSTGRES_DB: desafiotech_bd
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 10s
      retries: 5
      timeout: 5s

  minio:
    image: minio/minio:latest    
    container_name: minio-desafio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://minio:9000/minio/health/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  desafio-api:
    build: .
    container_name: api-desafio
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "8181:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/desafiotech_bd
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - MINIO_ENDPOINT=http://minio:9000  
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/swagger-ui.html || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - desafio-network
    restart: unless-stopped  

volumes:
  postgres_data:
  minio_data:

networks:
  desafio-network:
    driver: bridge